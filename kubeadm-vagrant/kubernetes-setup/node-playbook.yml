---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependencies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Force kubelet to listen on host network IP
    copy:
      dest: "/etc/default/kubelet"
      content: |
        KUBELET_EXTRA_ARGS=--node-ip="{{ node_ip }}"

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

  - stat:
      path: /dev/sdc
    register: additional_disk

  - name: Create a new primary partition in attached additional disk
    parted:
      device: /dev/sdc
      number: 1
      state: present
    when: additional_disk.stat.exists

  - name: Format additional disk
    filesystem:
      fstype: ext4
      dev: /dev/sdc1
    when: additional_disk.stat.exists

  - name: Mount the formatted disk to directory
    mount:
      path: /tmp/mnt/disk
      src: /dev/sdc1
      fstype: ext4
      opts: rw
      state: mounted
    when: additional_disk.stat.exists

  - name: Modify permissions of mount directory
    file:
      path: /mnt/disk
      state: directory
      mode: 0755
      owner: vagrant
    when: additional_disk.stat.exists

  handlers:
    - name: docker status
      service: name=docker state=started
